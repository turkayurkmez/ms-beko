// <auto-generated />
using System;
using EShop.Catalog.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EShop.Catalog.Infrastructure.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    [Migration("20250116091753_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EShop.Catalog.Domain.Aggregates.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 1, 16, 9, 17, 52, 738, DateTimeKind.Utc).AddTicks(4511),
                            Description = "Elektronik Ürünler",
                            Name = "Elektronik"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 1, 16, 9, 17, 52, 738, DateTimeKind.Utc).AddTicks(4515),
                            Description = "Giyim Ürünleri",
                            Name = "Giyim"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 1, 16, 9, 17, 52, 738, DateTimeKind.Utc).AddTicks(4516),
                            Description = "Kozmetik Ürünler",
                            Name = "Kozmetik"
                        });
                });

            modelBuilder.Entity("EShop.Catalog.Domain.Aggregates.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ba170801-bbe2-4117-98e1-31da7ccb050f"),
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 1, 16, 9, 17, 52, 738, DateTimeKind.Utc).AddTicks(4662),
                            Description = "Apple Iphone 12",
                            ImageUrl = "noImage.png",
                            Name = "Iphone 12",
                            Price = 10000m,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("3b27030c-40d9-41ab-b528-7274d115d8b9"),
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 1, 16, 9, 17, 52, 738, DateTimeKind.Utc).AddTicks(4694),
                            Description = "Samsung S21",
                            ImageUrl = "noImage.png",
                            Name = "Samsung S21",
                            Price = 9000m,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("243d1cd2-876e-4094-8e21-79b1d257219c"),
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 1, 16, 9, 17, 52, 738, DateTimeKind.Utc).AddTicks(4696),
                            Description = "LCW ",
                            ImageUrl = "noImage.png",
                            Name = "Gömlek",
                            Price = 750m,
                            Stock = 150
                        },
                        new
                        {
                            Id = new Guid("c8293825-eeac-4e83-8efc-09ea5d0416c7"),
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 1, 16, 9, 17, 52, 738, DateTimeKind.Utc).AddTicks(4698),
                            Description = "DeFacto",
                            ImageUrl = "noImage.png",
                            Name = "Pantolon",
                            Price = 1000m,
                            Stock = 150
                        });
                });

            modelBuilder.Entity("EShop.Catalog.Domain.Aggregates.Product", b =>
                {
                    b.HasOne("EShop.Catalog.Domain.Aggregates.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EShop.Catalog.Domain.Aggregates.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
